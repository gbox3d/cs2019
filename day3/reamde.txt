하루의 시작은 오늘의 '솔루션' 만들기 부터...

=> visual studio 을 실행하고=> 새프로잭트 만들기 클릭

=>
이름(기본으로 생성되는 프로잭트이름) : exam1
위치 : c:\cs2019\study\
솔루션이름 : day3

=> '확인' 클릭
=> 위내용은 4주동안 아침마다 무한 반복
=> c언어 잘모르시더라도 이것만 이라도 잘하시면 50%성공
=> 빌드하고 실행
=> cmd(명령 프롬프트창) 
=> cd c:\cs2019\study\day3 =>디랙토리로 이동
=> cd Debug 
=> '.exe' 파일 타이핑 후 엔터키
------------------------------------------------------

프로그램이란?
c 왜 쓰죠? => 프로그램 만들려고 => 
합리적인 일의 순서 => 인과 관계가 명확한 일의 순서
=> 시간상으로 나열 하여 모순이 없는 표현
=> 입력, 출력 => 입력->출력->입력
=> 닭,계란
=> 입력과 출력의 의미를 명확히 하고 시작
게임으로 따지자면=> 입력(마우스 키보드 게임페드...등등...)
=>출력(소리, 화면, 진동....) => 실시간

프로그램언어 종류
1. 컴파일러 방식 => C/C++, JAVA, C#,...
=> 미리 번역 해놓음=> 일괄적으로 플래이=> 빠르다. 가볍다.
=> 수정이 번거롭다.(개발공정이 비효율적)

2. 인터프리터(.....스크립트) => js, python, lua, lisp
=>한줄한줄 그때그때 해석(동시통역)
=>느리죠 , 무겁다.=> 수정이 편하다(개발공정 효율적)

프로그램작성=> 컴파일( + 링킹)=> 실행

컴파일 => obj => txt->바이너리(목적파일) => 바로 실행X
linking => exe => OS(CPU)에 맞게 바이너리 재수정
=> 목적 파일중 필요한것만 골라서 링킹

=> 50년정도 된 언어 => 현재 CPU G단위=> 그때는 K단위
=> MSX , Z80 8bit, 2.5Mhz => 8시간

--------------------------------------------------
프로그램의 구성과 실행과정

프로그램(실행)의 단위의 조합으로 프로그램을 구성
=>C언어의 startup(시작 위치) => main 
=> main은 함수이다. => 시작 함수(실행단위) 

실행단위를 프로그래밍 언어적으로 표현한 문법 => 함수

내부적인 실행구조=> startup address 
=> 0,1,2,3 해당주소에 명령어가 들어있음
=> 6000번지 바이너리 코드실행

-----------------------------------------------
exam1 예제 설명

출력함수 => c언어의 대표적인 출력함수
=> #include <stdio.h>
=> printf("출력하고 싶은문자열"); => 큰따옴표 안에 들어있는것이 문자열
=> printf("%d",출력하고싶은 숫자);
=> "%d" (형식화된 변환 문자열)
=> %d 써서 출력하는 차이점=> 계산의 가능 여부
=> \n , 개행문자(다음줄로 넘기는 문자)
=> \를 붙이고 뒤에 ",\ 같은 특수 문자를 출력할수있다.
=> printf_s("\\ , \" ");
=> \x아스키코드 => \"와 \x22는같다 => "의 아스키코드는 x22

=>참고 : 유니코드표
http://www.hipenpal.com/tool/characters-to-unicode-charts-in-korean.php?unicode=69

------------------------------------------------------------











